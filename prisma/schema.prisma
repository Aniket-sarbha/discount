generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  isActive        Boolean     @default(false)
  storeItems      StoreItem[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  image           String?
  backgroundImage String?
  description     String?
  userId          Boolean     @default(false)
  serverId        Boolean     @default(false)
  server          Boolean     @default(false)
}

model StoreItem {
  id        Int      @id @default(autoincrement())
  productId String   @unique
  name      String
  price     Decimal  @db.Decimal(10, 2)
  mrp       Decimal  @db.Decimal(10, 2)
  image     String?
  isActive  Boolean  @default(false)
  store     Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  storeId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
